/*!
  * KMT-Interaction Helper v0.3 (https://github.com/MrGracu/js-kmt-interaction_helper)
  * Description: Key, Mouse, Touch Interaction Helper - Easier event handling
  * Copyright 2023 by Gracjan Mika (https://gmika.pl/)
  * Licensed under MIT (https://github.com/MrGracu/js-kmt-interaction_helper/blob/main/LICENSE)
  */

var _keyFn=[];var _mouseFn=[];var _touchFn=[];var _onloadFn=[];function _eventPropagation(args,e=null){let fnArray=[];if(args.io=="key")fnArray=_keyFn;else if(args.io=="mouse")fnArray=_mouseFn;else if(args.io=="touch")fnArray=_touchFn;for(let i=0;i<fnArray.length;i++){if(typeof fnArray[i]==="function")fnArray[i](args);else{if(typeof fnArray[i]==="object"){let isOk=true;if(fnArray[i].target !==undefined&&fnArray[i].target !=args.target){isOk=false;}if(fnArray[i].type !==undefined){if(typeof fnArray[i].type==="string"||typeof fnArray[i].type==="object"){if(typeof fnArray[i].type==="string"){if(fnArray[i].type !=args.type)isOk=false;}else{if(typeof fnArray[i].type==="object"){if(!fnArray[i].type.includes(args.type))isOk=false;}}}else console.error("Object in "+args.io+" array have bad key type. Position: "+i);}if(isOk){if(fnArray[i].fn !==undefined&&typeof fnArray[i].fn==="function"){fnArray[i].fn(args);if(fnArray[i].propagate !==undefined&&!fnArray[i].propagate){if(e !==null)e.stopPropagation();else if(args.ev !=null)args.ev.stopPropagation();}if(fnArray[i].preventDefault !==undefined&&fnArray[i].preventDefault){if(e !==null)e.preventDefault();else if(args.ev !=null)args.ev.preventDefault();}}else console.error("Object in "+args.io+" array have not get function. Position: "+i);}}else console.error("Unrecognized type in "+args.io+" array. Position: "+i+", Type: '"+typeof fnArray[i]+"'");}}}function _getKey(type,code,name,target=null,e=null){let args={io:"key",type,code,name,target};_eventPropagation(args,e);}function _getMouse(type,e=null){let args={io:"mouse",type,target:e.target,ev:e};_eventPropagation(args);}function _getTouch(type,e=null){let args={io:"touch",type,target:e.target,ev:e};_eventPropagation(args);}window.onkeydown=function(e){let code=e.which||e.keyCode;let name=e.key;_getKey("down",code,name,e.target,e);};window.onkeypress=function(e){let code=e.which||e.keyCode;let name=e.key;_getKey("press",code,name,e.target,e);};window.onkeyup=function(e){let code=e.which||e.keyCode;let name=e.key;_getKey("up",code,name,e.target,e);};window.onclick=function(e){_getMouse("click",e);};window.oncontextmenu=function(e){_getMouse("context",e);};window.ondblclick=function(e){_getMouse("dbclick",e);};window.onmousedown=function(e){_getMouse("down",e);};window.onmouseup=function(e){_getMouse("up",e);};window.onmouseenter=function(e){_getMouse("enter",e);};window.onmouseleave=function(e){_getMouse("leave",e);};window.onmousemove=function(e){_getMouse("move",e);};window.onmouseout=function(e){_getMouse("out",e);};window.onmouseover=function(e){_getMouse("over",e);};window.onscroll=function(e){_getMouse("scroll", e);};window.addEventListener("touchcancel",function(e){_getTouch("cancel",e);});window.addEventListener("touchend",function(e){_getTouch("end",e);});window.addEventListener("touchmove",function(e){_getTouch("move",e);});window.addEventListener("touchstart",function(e){_getTouch("start",e);});window.onload=function(){for(let i=0;i<_onloadFn.length;i++){if(_onloadFn[i].length > 1 && typeof _onloadFn[i][0] === "function")_onloadFn[i][0](_onloadFn[i][1]);else if(typeof _onloadFn[i]==="function")_onloadFn[i]();}};
